
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://fuqibkjdvpmbegibcyhl.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ1cWlia2pkdnBtYmVnaWJjeWhsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY0MzE5OTIsImV4cCI6MjA2MjAwNzk5Mn0.xuOIxiIPB6QSsTdWRKxb3YLrUYA6__AWz0eBZz1Wx9Q";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY, 
  {
    auth: {
      persistSession: true
    },
    global: {
      headers: {
        'Content-Type': 'application/json'
      }
    }
  }
);

/**
 * Invokes a Supabase Edge Function with the given name and payload
 * @param functionName The name of the Edge Function to invoke
 * @param payload The payload to send to the Edge Function
 * @returns The response from the Edge Function
 */
export const invokeEdgeFunction = async <T = any>(functionName: string, payload?: any): Promise<T> => {
  try {
    console.log(`Invoking edge function ${functionName} with:`, payload);
    
    const { data, error } = await supabase.functions.invoke(functionName, {
      body: payload
    });
    
    if (error) {
      console.error(`Error invoking ${functionName}:`, error);
      throw error;
    }
    
    console.log(`Edge function ${functionName} response:`, data);
    return data as T;
  } catch (error) {
    console.error(`Exception invoking ${functionName}:`, error);
    throw error;
  }
};
